# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]
  pull_request:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # 这里就是我自己写的那些命令了，看看这个东西会执行吗
      - name: Install & Build
        run: |
          yarn install
          yarn build

      # 将打包后的代码
      - name: Deploy to Server # 部署到云服务器，使用easingthemes/ssh-deploy@v2.1.1，通过ssh的方式连接
        uses: cross-the-world/scp-pipeline@master
        env:
          WELCOME: 'ssh scp ssh pipelines'
          LASTSSH: 'Doing something after copying'
        with:
          #ARGS: ${{ secrets.ARGS }} # 对于任何初始/必需的rsync标志，默认-avzr --delete，如果目录下有其他不可删除文件或文件夹可以用--exclude忽略，如--exclude /uploads/
          # SOURCE: "./build/*" # 源目录
          # REMOTE_HOST: ${{ secrets.REMOTE_HOST }} # 服务器地址
          # REMOTE_PORT: ${{ secrets.REMOTE_PORT }} # ssh连接端口号
          # REMOTE_USER: root # 连接用户名
          # TARGET: ${{ secrets.REMOTE_TARGET }} # 目标部署目录
          host: ${{ secrets.REMOTE_HOST }}
          user: root
          pass: ${{ secrets.REMOTE_PASS }}
          connect_timeout: 10s
          local: './build/*'
          remote: ${{ secrets.REMOTE_TARGET }}

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
